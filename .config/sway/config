# Default config for sway
#
 # Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Aesthetics
gaps outer 2
gaps inner 2


### Variables
# Logo key. Use Mod1 for Alt.
#
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term foot

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu 'albert show'
set $switcher '$HOME/.cargo/bin/swayr'
set $lockman exec bash ~/.config/sway/lockman.sh
# Start the app switcher


### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
exec_always 'swaybg -i ~/.config/Wallpaper/macDead.png -m fill'

set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable
#include "$HOME/.config/sway/colors-sway"


#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
exec swayidle -w \
         timeout 300 'swaylock -f -i "$HOME/.config/Wallpaper/dragon.png"' \
         timeout 500 'playerctl -a pause && swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on" && playerctl -a play' \
         timeout 3600 'systemctl suspend' \
         before-sleep 'swaylock -f -i "$HOME/.config/Wallpaper/dragon.png"' \
         after-resume 'swaymsg "output * dpms on"' \
         unlock 'playerctl -a play'

#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
input "type:touchpad" {
      tap enabled
      natural_scroll enabled
      pointer_accel 0.2
      accel_profile adaptive
      dwt enabled
      tap_button_map lrm
}

input "type:keyboard" {
repeat_delay 150
repeat_rate 50

      xkb_layout dvorak,us
      xkb_options ctrl:swapcaps,grp:alt_space_toggle,compose:ralt
}
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+apostrophe kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'


#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right


#
# Workspaces:
#
    # # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Workspaces:
    # set $ws0 0
    # set $ws1 1
    # set $ws2 2
    # set $ws3 3
    # set $ws4 4
    # set $ws5 5
    # set $ws6 6
    # set $ws7 7
    # set $ws8 8
    # set $ws9 9

    # Workrooms:
    # set $workroom 1
    # set $workspace 0

    # bindsym Alt+Shift+1 set $$workroom T; workspace $$workroom$$workspace
    # bindsym Alt+Shift+2 set $$workroom S; workspace $$workroom$$workspace
    # bindsym Alt+Shift+3 set $$workroom W; workspace $$workroom$$workspace
    # bindsym Alt+Shift+4 set $$workroom HistComp; workspace $$workroom$$workspace
    # bindsym Alt+Shift+5 set $$workroom InfraCom; workspace $$workroom$$workspace
    # bindsym Alt+Shift+6 set $$workroom InfraSW; workspace $$workroom$$workspace

    # Navigate
    # bindsym $mod+Escape workspace $$workroom$ws0; set $$workspace $ws0
    # bindsym $mod+1 workspace $$workroom$ws1; set $$workspace $ws1
    # bindsym $mod+2 workspace $$workroom$ws2; set $$workspace $ws2
    # bindsym $mod+3 workspace $$workroom$ws3; set $$workspace $ws3
    # bindsym $mod+4 workspace $$workroom$ws4; set $$workspace $ws4
    # bindsym $mod+5 workspace $$workroom$ws5; set $$workspace $ws5
    # bindsym $mod+6 workspace $$workroom$ws6; set $$workspace $ws6
    # bindsym $mod+7 workspace $$workroom$ws7; set $$workspace $ws7
    # bindsym $mod+8 workspace $$workroom$ws8; set $$workspace $ws8
    # bindsym $mod+9 workspace $$workroom$ws9; set $$workspace $ws9

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+s splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+b layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent


#
# Scratchpad:
#   # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+grave move scratchpad

    # Move the currently focused container - relative movement
    bindsym $mod+Ctrl+h move left
    bindsym $mod+Ctrl+l move right
    bindsym $mod+Ctrl+k move up
    bindsym $mod+Ctrl+j move down
    bindsym $mod+Ctrl+c move position center
    bindsym $mod+Ctrl+s sticky toggle

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+grave scratchpad show

    bindsym $mod+Ctrl++grave+1 mark "music", move scratchpad
    bindsym $mod+Ctrl+grave+2 mark "social", move scratchpad
    bindsym $mod+Ctrl+grave+3 mark "keepass", move scratchpad
    bindsym $mod+Ctrl+grave+4 mark "terminals", move scratchpad
    bindsym $mod+Ctrl+grave+5 mark "portable-emacs", move scratchpad
    bindsym $mod+Ctrl+grave+6 mark "dropdown", move scratchpad
    bindsym $mod+Ctrl+grave+7 mark "emacs", move scratchpad
    bindsym $mod+Ctrl+grave+8 mark "htop", move scratchpad
    bindsym $mod+Ctrl+grave+9 mark "extra4", move scratchpad

    bindsym $mod+Ctrl+1 [con_mark="music"] scratchpad show
    bindsym $mod+Ctrl+2 [con_mark="social"] scratchpad show
    bindsym $mod+Ctrl+3 [con_mark="keepass"] scratchpad show
    bindsym $mod+Ctrl+4 [con_mark="terminals"] scratchpad show
    bindsym $mod+Ctrl+5 [con_mark="portable-emacs"] scratchpad show
    bindsym $mod+Ctrl+6 [con_mark="dropdown"] scratchpad show
    bindsym $mod+Ctrl+7 [con_mark="emacs"] scratchpad show
    bindsym $mod+Ctrl+8 [con_mark="htop"] scratchpad show
    bindsym $mod+Ctrl+9 [con_mark="extra4"] scratchpad show


#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


#
# Shortcuts and bindings
#
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +3%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -3%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86Search exec bemenu-run
# Screenshot keybinds
bindsym Print exec grim
bindsym Shift+Print exec grim -g "$(slurp)"
# Lockscreen keybinds
bindsym $mod+BackSpace exec 'makoctl dismiss'
bindsym $mod+Delete exec $lockman
# Aplications Keybinds
bindsym $mod+n exec brave-browser
bindsym $mod+F10 exec 'wf-recorder -g "$(slurp)"'
bindsym $mod+F11 exec 'kill -2 "$(pidof wf-recorder)"'
bindsym $mod+p exec 'pkill -USR1 gammastep || gammastep -O 4000'

#
# Auto startup
#
#
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
exec 'eval "$(ssh-agent -s)"'
exec 'ssh-add ~/.ssh/id_ed25519'
exec 'safeeyes'
exec_always '$HOME/.config/sway/clamshell.sh'
exec 'udiskie --automount --tray --notify &'
exec 'wl-paste -t text --watch clipman store'
exec 'albert'
exec 'insync start'
exec 'emacs --daemon'
exec mako
exec 'lxpolkit'
exec '~/.cargo/bin/swayrd'


#
# Swayr
#
#
bindsym $mod+period exec '$switcher switch-window'
bindsym $mod+Tab exec '$switcher switch-to-urgent-or-lru-window'
bindsym $mod+bracketright exec '$switcher next-window'
bindsym $mod+bracketleft exec '$switcher prev-window'
bindsym $mod+Ctrl+Space exec '$switcher switch-workspace-or-window'
bindsym $mod+c exec '$switcher execute-swayr-command'


#
# Automation
#
for_window [app_id="org.keepassxc.KeePassXC"] {
    mark "keepass"
    move to scratchpad
}

for_window [app_id="brave-cinhimbnkkaeohfgghhklpknlkffjgod-Default"] {
    mark "music"
    move to scratchpad
}

bindsym $mod+t exec (swaymsg "[app_id=dropdown] scratchpad show") || exec $term -a dropdown

for_window [app_id="dropdown"] floating enable, \
    border pixel 5, \
    resize set 50 ppt 60 ppt, \
    move position center, \
    mark "dropdown", \
    move to scratchpad, \
    [con_mark="dropdown"]  scratchpad show

for_window [title="YouTube"] inhibit_idle focus
for_window [title="Meet"] inhibit_idle focus
#
# Status Bar:
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
    #position top

    # # When the status_command prints a new line to stdout, swaybar updates.
    # # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    #colors {
    #    statusline #ffffff
    #    background #323232
    #    inactive_workspace #32323200 #32323200 #5c5c5c
   # }
}

include /etc/sway/config.d/*
